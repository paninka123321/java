<div class="gauge-widget">
  <div class="gauge-header">
    <span class="gauge-icon">⚡</span>
    <span class="gauge-label">CPU</span>
  </div>

  <div class="gauge-body">
    <canvas id="gaugeCanvas"></canvas>
    <span class="gauge-value" id="gaugeValue">0%</span>
  </div>
</div>

<style>
/* --- kompaktowy nowoczesny gauge widget --- */
.gauge-widget {
  width: 120px;
  height: 120px;
  background: #fff;
  border-radius: 16px;
  box-shadow: 0 4px 10px rgba(0,0,0,0.1);
  font-family: 'Segoe UI', sans-serif;
  color: #000;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 8px;
  gap: 4px;
}

.gauge-header {
  display: flex;
  align-items: center;
  gap: 4px;
}

.gauge-icon {
  font-size: 16px;
  color: #222;
}

.gauge-label {
  font-size: 12px;
  font-weight: 500;
  color: #222;
}

.gauge-body {
  position: relative;
  width: 104px;
  height: 62px;
}

#gaugeCanvas {
  width: 104px;
  height: 62px;
}

.gauge-value {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 14px;
  font-weight: 600;
  color: #222;
}
</style>

<script>
const canvas = document.getElementById('gaugeCanvas');
const ctx = canvas.getContext('2d');
const valueEl = document.getElementById('gaugeValue');

canvas.width = 104;
canvas.height = 62;

function drawGauge(value) {
  ctx.clearRect(0, 0, canvas.width, canvas.height);

  // tło półkola
  ctx.beginPath();
  ctx.lineWidth = 10;
  ctx.strokeStyle = '#eee';
  ctx.arc(52, 52, 40, Math.PI, 0, false);
  ctx.stroke();

  // kolor w zależności od wartości
  let color = value > 75 ? '#ff3b30' : value > 50 ? '#ffcc00' : '#4cd964';

  // wypełnienie półkola
  ctx.beginPath();
  ctx.lineWidth = 10;
  ctx.strokeStyle = color;
  let endAngle = Math.PI + (value / 100) * Math.PI;
  ctx.arc(52, 52, 40, Math.PI, endAngle, false);
  ctx.stroke();

  valueEl.textContent = value + '%';
}

// przykładowa animacja
let current = 0;
setInterval(() => {
  current = (current + 3) % 101;
  drawGauge(current);
}, 500);
</script>
